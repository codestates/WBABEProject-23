definitions:
  controller.Controller:
    type: object
  controller.CreateMenuInput:
    properties:
      businessID:
        type: string
      category:
        type: string
      name:
        type: string
      origin:
        type: string
      price:
        minimum: 0
        type: integer
    required:
    - businessID
    - category
    - name
    - origin
    type: object
  controller.CreateOrderInput:
    properties:
      bid:
        type: string
      menu:
        items:
          properties:
            menuID:
              type: string
            number:
              minimum: 0
              type: integer
          type: object
        type: array
      orderer:
        type: string
    type: object
  controller.ReviewInput:
    properties:
      content:
        type: string
      menu_id:
        type: string
      order_id:
        type: string
      orderer:
        type: string
      score:
        minimum: 0
        type: number
    type: object
  controller.UpdateMenuInput:
    properties:
      category:
        type: string
      id:
        type: string
      isDeleted:
        type: boolean
      name:
        type: string
      origin:
        type: string
      price:
        minimum: 0
        type: integer
      state:
        maximum: 2
        minimum: 0
        type: integer
    required:
    - id
    type: object
  controller.UpdateOrderInput:
    properties:
      menu:
        items:
          properties:
            menuID:
              type: string
            number:
              minimum: 1
              type: integer
          type: object
        type: array
      orderID:
        type: string
    type: object
  controller.UpdateOrderStateInput:
    properties:
      orderId:
        type: string
      state:
        maximum: 10
        minimum: 1
        type: integer
    required:
    - orderId
    - state
    type: object
info:
  contact: {}
paths:
  /menu:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      - description: sort할 컬럼이름
        in: query
        name: sort
        required: true
        type: string
      - description: 'order= 1은 오름찬순 그 외 내림차순 '
        in: query
        name: order
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: call ReadMenu, return ok by json.
    patch:
      consumes:
      - application/json
      parameters:
      - description: 바꿀 메뉴id, 바꿀내용만 작성
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateMenuInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: call UpdateMenu, return ok by json.
    post:
      consumes:
      - application/json
      parameters:
      - description: 메뉴 입력
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/controller.CreateMenuInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: call CreateMenu, return ok by json.
  /order:
    get:
      consumes:
      - application/json
      parameters:
      - description: 유저이름
        in: query
        name: name
        required: true
        type: string
      - description: 1은 현재 주문, 그 외 과거 주문
        in: query
        name: cur
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: call ReadOrder, return ok by json.
    patch:
      consumes:
      - application/json
      parameters:
      - description: 수정할 주문 번호, 변경한 주문 메뉴 [{메뉴이름, 수량}]
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateOrderInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: call UpdateOrder, return ok by json.
    post:
      consumes:
      - application/json
      parameters:
      - description: 주문자 이름,  메뉴 배열형태로 메뉴ID, 주문 수량 입력
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.CreateOrderInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: call CreateOrder, return ok by json.
  /order/admin:
    get:
      consumes:
      - application/json
      parameters:
      - description: 사업체 id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: call AdminReadOrder, return ok by json.
    patch:
      consumes:
      - application/json
      parameters:
      - description: '주문 번호, 상태 '
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateOrderStateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: call UpdateOrderState, return ok by json.
  /review:
    get:
      consumes:
      - application/json
      parameters:
      - description: 메뉴 id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: call ReadReviewControl, return ok by json.
    post:
      consumes:
      - application/json
      parameters:
      - description: 리뷰
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.ReviewInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: call CreateReview, return ok by json.
swagger: "2.0"
